// ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö
// ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ: node test_badword.js

const badwordModule = require('./modules/commands/badword.js');

// Mock API ‡πÅ‡∏•‡∏∞ Event ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
const mockAPI = {
    sendMessage: (message, threadID, messageID) => {
        console.log(`[SEND MESSAGE] ThreadID: ${threadID}`);
        console.log(`Message: ${message}`);
        console.log('---');
    },
    removeUserFromGroup: (userID, threadID) => {
        console.log(`[KICK USER] Removed user ${userID} from thread ${threadID}`);
        return Promise.resolve();
    }
};

const mockEvent = {
    threadID: "test_group_123",
    senderID: "test_user_456", 
    messageID: "msg_789",
    body: ""
};

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ
async function testBadwordSystem() {
    console.log("üß™ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö\n");
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    console.log("1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô");
    await badwordModule.execute(mockAPI, mockEvent, ["‡πÄ‡∏õ‡∏¥‡∏î"]);
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö
    console.log("\n2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö");
    await badwordModule.execute(mockAPI, mockEvent, ["‡πÄ‡∏û‡∏¥‡πà‡∏°", "‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤"]);
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    console.log("\n3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö");
    await badwordModule.execute(mockAPI, mockEvent, ["‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"]);
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö
    console.log("\n4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö");
    const testEvent = { ...mockEvent, body: "‡∏™‡∏±‡∏™‡∏Ñ‡∏£‡∏±‡∏ö" };
    await badwordModule.checkMessage(mockAPI, testEvent);
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©
    console.log("\n5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©");
    const testEvent2 = { ...mockEvent, body: "‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤‡∏Ñ‡∏£‡∏±‡∏ö" };
    await badwordModule.checkMessage(mockAPI, testEvent2);
    
    console.log("\n‚úÖ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô");
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
testBadwordSystem().catch(console.error);
