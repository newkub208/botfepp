/**
 * @name autoReplyTag
 * @description ตอบกลับอัตโนมัติเมื่อมีคนแท็ก UID ที่กำหนด
 * @version 1.0.0
 * @author Auto Generated by สร้างคำสั่ง
 */

const fs = require('fs');
const path = require('path');

// ไฟล์เก็บการตั้งค่า Auto Reply Tag
const CONFIG_FILE = path.join(__dirname, '../commands/autoReplyTagConfig.json');

// โหลดการตั้งค่า
function loadConfig() {
    try {
        if (fs.existsSync(CONFIG_FILE)) {
            return JSON.parse(fs.readFileSync(CONFIG_FILE, 'utf8'));
        }
    } catch (error) {
        console.error('[AutoReplyTag Config] Error loading config:', error);
    }
    return {
        enabled: true,
        targetUID: "61555184860915",
        replyMessage: "ไม่ว่าง",
        threads: {}
    };
}

module.exports = {
    name: "autoReplyTag",
    description: "ตอบกลับอัตโนมัติเมื่อมีคนแท็ก UID",
    version: "1.0.0",

    async onEvent({ api, event, prefix }) {
        try {
            // ตรวจสอบว่า event มีค่าหรือไม่
            if (!event || typeof event !== 'object') {
                return;
            }

            const { threadID, messageID, mentions, body, type, senderID } = event;
            
            // ตรวจสอบเฉพาะข้อความปกติ
            if (type !== "message" || !body) return;
            
            // ตรวจสอบข้อมูลสำคัญ
            if (!threadID || !messageID) {
                return;
            }
            
            // โหลดการตั้งค่า
            const config = loadConfig();
            
            // ตรวจสอบว่าระบบเปิดใช้งานหรือไม่
            if (!config.enabled) {
                return;
            }
            
            // ตรวจสอบว่ามี mentions หรือไม่
            if (!mentions || typeof mentions !== 'object' || Object.keys(mentions).length === 0) {
                return;
            }
            
            // ตรวจสอบว่า UID เป้าหมายถูกแท็กหรือไม่
            const mentionedUIDs = Object.keys(mentions);
            
            if (mentionedUIDs.includes(config.targetUID)) {
                // ป้องกันไม่ให้ตอบตัวเอง
                if (senderID === config.targetUID) {
                    return;
                }
                
                // ตอบกลับอัตโนมัติ
                await api.sendMessage(config.replyMessage, threadID, messageID);
            }
            
        } catch (error) {
            console.error('[AutoReplyTag Error]:', error);
            // ไม่ส่งข้อความผิดพลาดใน event handler เพื่อไม่ให้รบกวน
        }
    }
};
