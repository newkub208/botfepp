const fs = require('fs');
const path = require('path');

const LINK_PROTECTION_CONFIG_FILE = path.join(__dirname, '../events/linkProtectionState.json');

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
function loadLinkProtectionConfig() {
    try {
        if (fs.existsSync(LINK_PROTECTION_CONFIG_FILE)) {
            const data = fs.readFileSync(LINK_PROTECTION_CONFIG_FILE, 'utf8');
            return JSON.parse(data);
        }
    } catch (error) {
        console.error('Error loading link protection config:', error);
    }
    return {};
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
function saveLinkProtectionConfig(config) {
    try {
        const dir = path.dirname(LINK_PROTECTION_CONFIG_FILE);
        if (!fs.existsSync(dir)) {
            fs.mkdirSync(dir, { recursive: true });
        }
        fs.writeFileSync(LINK_PROTECTION_CONFIG_FILE, JSON.stringify(config, null, 2));
        return true;
    } catch (error) {
        console.error('Error saving link protection config:', error);
        return false;
    }
}

module.exports = {
    name: "‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á",
    description: "‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏•‡∏¥‡πâ‡∏á‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° - ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô",
    nashPrefix: false,
    role: "admin",
    aliases: ["linkprotect", "antilink"],
    usage: "‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á [‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î/‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞]",
    
    async execute(api, event, args) {
        const { threadID, messageID, senderID } = event;
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
        const config = loadLinkProtectionConfig();
        
        if (args.length === 0) {
            const isEnabled = config[threadID]?.enabled || false;
            const customDomains = config[threadID]?.customDomains || [];
            const whitelist = config[threadID]?.whitelist || [];
            
            let message = "üõ°Ô∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á\n";
            message += "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n";
            message += `‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${isEnabled ? 'üü¢ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : 'üî¥ ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}\n`;
            message += `‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏±‡∏ô: ${customDomains.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
            message += `‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï: ${whitelist.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n`;
            message += "üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:\n";
            message += "‚Ä¢ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡πÄ‡∏õ‡∏¥‡∏î - ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n";
            message += "‚Ä¢ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡∏õ‡∏¥‡∏î - ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n";
            message += "‚Ä¢ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡πÄ‡∏û‡∏¥‡πà‡∏° [‡πÇ‡∏î‡πÄ‡∏°‡∏ô] - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ô\n";
            message += "‚Ä¢ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡∏•‡∏ö [‡πÇ‡∏î‡πÄ‡∏°‡∏ô] - ‡∏•‡∏ö‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ô\n";
            message += "‚Ä¢ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï [‡πÇ‡∏î‡πÄ‡∏°‡∏ô] - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï\n";
            message += "‚Ä¢ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡∏•‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï [‡πÇ‡∏î‡πÄ‡∏°‡∏ô] - ‡∏•‡∏ö‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï\n";
            message += "‚Ä¢ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ - ‡∏î‡∏π‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n";
            message += "‚Ä¢ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï - ‡∏î‡∏π‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n";
            message += "‚Ä¢ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞\n\n";
            message += "‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏•‡∏¥‡πâ‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!\n";
            message += "‚úÖ ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏±‡∏ô";
            
            return api.sendMessage(message, threadID, messageID);
        }
        
        const action = args[0].toLowerCase();
        
        switch (action) {
            case '‡πÄ‡∏õ‡∏¥‡∏î':
            case 'on':
            case 'enable':
                if (!config[threadID]) config[threadID] = {};
                config[threadID].enabled = true;
                if (!config[threadID].customDomains) config[threadID].customDomains = [];
                if (!config[threadID].whitelist) config[threadID].whitelist = [];
                saveLinkProtectionConfig(config);
                
                return api.sendMessage(
                    "üü¢ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß!\n\n" +
                    "‚ö†Ô∏è ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏•‡∏¥‡πâ‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ\n\n" +
                    "üîó ‡∏•‡∏¥‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏Å‡∏±‡∏ô:\n" +
                    "‚Ä¢ http://\n" +
                    "‚Ä¢ https://\n" +
                    "‚Ä¢ www.\n" +
                    "‚Ä¢ .com, .net, .org\n" +
                    "‚Ä¢ ‡πÅ‡∏•‡∏∞‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°",
                    threadID, messageID
                );
                
            case '‡∏õ‡∏¥‡∏î':
            case 'off':
            case 'disable':
                if (!config[threadID]) config[threadID] = {};
                config[threadID].enabled = false;
                saveLinkProtectionConfig(config);
                
                return api.sendMessage(
                    "üî¥ ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß",
                    threadID, messageID
                );
                
            case '‡πÄ‡∏û‡∏¥‡πà‡∏°':
            case 'add':
                if (args.length < 2) {
                    return api.sendMessage(
                        "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡πÄ‡∏û‡∏¥‡πà‡∏° youtube.com",
                        threadID, messageID
                    );
                }
                
                const domainToAdd = args[1].toLowerCase().replace(/^(https?:\/\/)?(www\.)?/, '');
                if (!config[threadID]) config[threadID] = { enabled: false, customDomains: [], whitelist: [] };
                if (!config[threadID].customDomains) config[threadID].customDomains = [];
                
                if (config[threadID].customDomains.includes(domainToAdd)) {
                    return api.sendMessage(
                        `‚ùå ‡πÇ‡∏î‡πÄ‡∏°‡∏ô "${domainToAdd}" ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß`,
                        threadID, messageID
                    );
                }
                
                config[threadID].customDomains.push(domainToAdd);
                saveLinkProtectionConfig(config);
                
                return api.sendMessage(
                    `‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏î‡πÄ‡∏°‡∏ô "${domainToAdd}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n\n` +
                    `üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${config[threadID].customDomains.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`,
                    threadID, messageID
                );
                
            case '‡∏•‡∏ö':
            case 'remove':
            case 'delete':
                if (args.length < 2) {
                    return api.sendMessage(
                        "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡∏•‡∏ö youtube.com",
                        threadID, messageID
                    );
                }
                
                const domainToRemove = args[1].toLowerCase().replace(/^(https?:\/\/)?(www\.)?/, '');
                if (!config[threadID] || !config[threadID].customDomains) {
                    return api.sendMessage(
                        "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
                        threadID, messageID
                    );
                }
                
                const domainIndex = config[threadID].customDomains.indexOf(domainToRemove);
                if (domainIndex === -1) {
                    return api.sendMessage(
                        `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏î‡πÄ‡∏°‡∏ô "${domainToRemove}" ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`,
                        threadID, messageID
                    );
                }
                
                config[threadID].customDomains.splice(domainIndex, 1);
                saveLinkProtectionConfig(config);
                
                return api.sendMessage(
                    `‚úÖ ‡∏•‡∏ö‡πÇ‡∏î‡πÄ‡∏°‡∏ô "${domainToRemove}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n\n` +
                    `üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${config[threadID].customDomains.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`,
                    threadID, messageID
                );
                
            case '‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï':
            case 'allow':
            case 'whitelist':
                if (args.length < 2) {
                    return api.sendMessage(
                        "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï shopee.co.th",
                        threadID, messageID
                    );
                }
                
                const domainToAllow = args[1].toLowerCase().replace(/^(https?:\/\/)?(www\.)?/, '');
                if (!config[threadID]) config[threadID] = { enabled: false, customDomains: [], whitelist: [] };
                if (!config[threadID].whitelist) config[threadID].whitelist = [];
                
                if (config[threadID].whitelist.includes(domainToAllow)) {
                    return api.sendMessage(
                        `‚ùå ‡πÇ‡∏î‡πÄ‡∏°‡∏ô "${domainToAllow}" ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÅ‡∏•‡πâ‡∏ß`,
                        threadID, messageID
                    );
                }
                
                config[threadID].whitelist.push(domainToAllow);
                saveLinkProtectionConfig(config);
                
                return api.sendMessage(
                    `‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏î‡πÄ‡∏°‡∏ô "${domainToAllow}" ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n\n` +
                    `üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${config[threadID].whitelist.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n` +
                    `üí° ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏±‡∏ô‡πÅ‡∏°‡πâ‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á`,
                    threadID, messageID
                );
                
            case '‡∏•‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï':
            case 'removeallow':
            case 'unwhitelist':
                if (args.length < 2) {
                    return api.sendMessage(
                        "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡∏•‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï shopee.co.th",
                        threadID, messageID
                    );
                }
                
                const domainToDisallow = args[1].toLowerCase().replace(/^(https?:\/\/)?(www\.)?/, '');
                if (!config[threadID] || !config[threadID].whitelist) {
                    return api.sendMessage(
                        "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï",
                        threadID, messageID
                    );
                }
                
                const allowIndex = config[threadID].whitelist.indexOf(domainToDisallow);
                if (allowIndex === -1) {
                    return api.sendMessage(
                        `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏î‡πÄ‡∏°‡∏ô "${domainToDisallow}" ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï`,
                        threadID, messageID
                    );
                }
                
                config[threadID].whitelist.splice(allowIndex, 1);
                saveLinkProtectionConfig(config);
                
                return api.sendMessage(
                    `‚úÖ ‡∏•‡∏ö‡πÇ‡∏î‡πÄ‡∏°‡∏ô "${domainToDisallow}" ‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n\n` +
                    `üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${config[threadID].whitelist.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`,
                    threadID, messageID
                );
                
            case '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£':
            case 'list':
                const groupConfig = config[threadID];
                if (!groupConfig || !groupConfig.customDomains || groupConfig.customDomains.length === 0) {
                    return api.sendMessage(
                        "üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏±‡∏ô\n" +
                        "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n" +
                        "üîß ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô:\n" +
                        "‚Ä¢ http://\n" +
                        "‚Ä¢ https://\n" +
                        "‚Ä¢ www.\n" +
                        "‚Ä¢ .com, .net, .org, .co.th\n" +
                        "‚Ä¢ facebook.com\n" +
                        "‚Ä¢ youtube.com\n" +
                        "‚Ä¢ ‡πÅ‡∏•‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ\n\n" +
                        "üîß ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©: ‡πÑ‡∏°‡πà‡∏°‡∏µ",
                        threadID, messageID
                    );
                }
                
                let listMessage = "üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏±‡∏ô\n";
                listMessage += "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n";
                listMessage += "üîß ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô: ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà\n";
                listMessage += `üîß ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©: ${groupConfig.customDomains.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n`;
                
                if (groupConfig.customDomains.length > 0) {
                    listMessage += "üìù ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ:\n";
                    groupConfig.customDomains.forEach((domain, index) => {
                        listMessage += `${index + 1}. ${domain}\n`;
                    });
                } else {
                    listMessage += "‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©";
                }
                
                return api.sendMessage(listMessage, threadID, messageID);
                
            case '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï':
            case 'allowlist':
            case 'whitelistshow':
                const groupWhitelist = config[threadID]?.whitelist || [];
                if (groupWhitelist.length === 0) {
                    return api.sendMessage(
                        "üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï\n" +
                        "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n" +
                        "üîß ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï\n\n" +
                        "üí° ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á '‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï [‡πÇ‡∏î‡πÄ‡∏°‡∏ô]' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï",
                        threadID, messageID
                    );
                }
                
                let whitelistMessage = "üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï\n";
                whitelistMessage += "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n";
                whitelistMessage += `üîß ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï: ${groupWhitelist.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n`;
                
                whitelistMessage += "üìù ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ:\n";
                groupWhitelist.forEach((domain, index) => {
                    whitelistMessage += `${index + 1}. ‚úÖ ${domain}\n`;
                });
                
                whitelistMessage += "\nüí° ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏±‡∏ô‡πÅ‡∏°‡πâ‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á";
                
                return api.sendMessage(whitelistMessage, threadID, messageID);
                
            case '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞':
            case 'status':
                const currentConfig = config[threadID];
                const enabled = currentConfig?.enabled || false;
                const customCount = currentConfig?.customDomains?.length || 0;
                const whitelistCount = currentConfig?.whitelist?.length || 0;
                
                let statusMessage = "üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á\n";
                statusMessage += "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n";
                statusMessage += `üîß ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${enabled ? 'üü¢ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : 'üî¥ ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}\n`;
                statusMessage += `üìã ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏±‡∏ô: ${customCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
                statusMessage += `‚úÖ ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï: ${whitelistCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
                statusMessage += `üõ°Ô∏è ‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô: ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà\n`;
                statusMessage += `üëë ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÇ‡∏î‡∏¢: ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô\n\n`;
                
                if (enabled) {
                    statusMessage += "‚ö†Ô∏è ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏•‡∏¥‡πâ‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!\n";
                    if (whitelistCount > 0) {
                        statusMessage += `‚úÖ ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï ${whitelistCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
                    }
                } else {
                    statusMessage += "üí° ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á '‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‡πÄ‡∏õ‡∏¥‡∏î' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô";
                }
                
                return api.sendMessage(statusMessage, threadID, messageID);
                
            default:
                return api.sendMessage(
                    "‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n‡πÉ‡∏ä‡πâ: ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á [‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î/‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö/‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï/‡∏•‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï/‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£/‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï/‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞]",
                    threadID, messageID
                );
        }
    }
};
