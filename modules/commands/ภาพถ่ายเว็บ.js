const axios = require("axios");
const fs = require("fs");
const path = require("path");

module.exports = {
  name: "‡∏†‡∏≤‡∏û‡πÄ‡∏ß‡πá‡∏ö",
  description: "‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏à‡∏≤‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏°‡∏≤",
  version: "1.0.0",
  cooldowns: 5,
  nashPrefix: true,
  aliases: ["screenshot", "‡πÄ‡∏ß‡πá‡∏ö", "‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏Ñ‡∏õ"],

  async execute(api, event, args) {
    const { threadID, messageID } = event;
    const inputUrl = args.join(" ");

    if (!inputUrl) {
      return api.sendMessage("üåê ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå ‡πÄ‡∏ä‡πà‡∏ô:\n‡∏†‡∏≤‡∏û‡πÄ‡∏ß‡πá‡∏ö https://example.com", threadID, messageID);
    }

    try {
      const encodedUrl = encodeURIComponent(inputUrl);
      const apiKey = "e62d60dd-8853-4233-bbcb-9466b4cbc265";
      const apiUrl = `https://kaiz-apis.gleeze.com/api/screenshot?url=${encodedUrl}&apikey=${apiKey}`;

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå cache ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
      const cachePath = path.join(__dirname, "cache");
      if (!fs.existsSync(cachePath)) {
        fs.mkdirSync(cachePath);
      }

      const fileName = `screenshot_${Date.now()}.png`;
      const filePath = path.join(cachePath, fileName);
      const writer = fs.createWriteStream(filePath);

      const imageRes = await axios({
        url: apiUrl,
        method: 'GET',
        responseType: 'stream'
      });

      imageRes.data.pipe(writer);

      writer.on("finish", () => {
        api.sendMessage({
          body: `üì∏ ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö: ${inputUrl}`,
          attachment: fs.createReadStream(filePath)
        }, threadID, () => fs.unlinkSync(filePath)); // ‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏á
      });

      writer.on("error", (err) => {
        console.error("‚ùå ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err);
        api.sendMessage("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ", threadID, messageID);
      });

    } catch (err) {
      console.error("‚ùå Screenshot API Error:", err.message);
      return api.sendMessage("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö", threadID, messageID);
    }
  }
};