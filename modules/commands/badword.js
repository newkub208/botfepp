const fs = require('fs');
const path = require('path');

// ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏°
const badwordConfigPath = path.join(__dirname, '../../badword_config.json');

// ‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏ä‡πá‡∏Å (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÑ‡∏î‡πâ)
const DEFAULT_BADWORDS = [
    // ‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
    '‡πÑ‡∏≠‡πâ‡∏™‡∏±‡∏™', '‡πÑ‡∏≠‡∏™‡∏±‡∏™', '‡∏™‡∏±‡∏™', '‡∏´‡πà‡∏≤', '‡∏ü‡∏±‡∏Ñ', 'fuck', 'shit', 'damn', '‡πÄ‡∏´‡∏µ‡πâ‡∏¢', '‡∏£‡∏∞‡∏¢‡∏≥', 
    '‡∏•‡πâ‡∏ß‡∏ô', '‡∏Ñ‡∏ß‡∏¢', '‡∏´‡∏µ', '‡πÄ‡∏¢‡πá‡∏î', '‡πÄ‡∏™‡∏∑‡∏≠‡∏Å', '‡∏Å‡∏≤‡∏Å', '‡∏Ç‡∏µ‡πâ', '‡∏ö‡πâ‡∏≤', '‡πÄ‡∏õ‡∏¥‡∏î', '‡πÑ‡∏≠‡πâ‡∏ö‡πâ‡∏≤',
    '‡πÑ‡∏≠‡πâ‡∏Å‡∏≤‡∏Å', '‡πÑ‡∏≠‡πâ‡∏Ç‡∏µ‡πâ', '‡πÅ‡∏°‡πà‡∏á', '‡∏°‡∏∂‡∏á', '‡∏Å‡∏π', '‡πÑ‡∏≠‡πâ‡∏Å‡∏π', '‡πÑ‡∏≠‡πâ‡∏°‡∏∂‡∏á', '‡∏ß‡∏∞', '‡πÄ‡∏ß‡πâ‡∏¢',
    // ‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
    'bitch', 'bastard', 'asshole', 'motherfucker', 'dickhead', 'cunt', 'whore',
    'slut', 'faggot', 'nigger', 'retard', 'gay', 'lesbian', 'homo'
];

// ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
function loadBadwordConfig() {
    try {
        if (fs.existsSync(badwordConfigPath)) {
            return JSON.parse(fs.readFileSync(badwordConfigPath, 'utf8'));
        }
    } catch (error) {
        console.error('Error loading badword config:', error);
    }
    return {};
}

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
function saveBadwordConfig(config) {
    try {
        fs.writeFileSync(badwordConfigPath, JSON.stringify(config, null, 2));
    } catch (error) {
        console.error('Error saving badword config:', error);
    }
}

// ‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏µ‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
function containsBadword(message, customBadwords = []) {
    const allBadwords = [...DEFAULT_BADWORDS, ...customBadwords];
    const lowerMessage = message.toLowerCase();
    
    return allBadwords.some(badword => lowerMessage.includes(badword.toLowerCase()));
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
async function checkBotPermissions(api, threadID) {
    try {
        const threadInfo = await api.getThreadInfo(threadID);
        const botUserID = api.getCurrentUserID();
        
        return {
            threadType: threadInfo.threadType || 'Unknown',
            memberCount: threadInfo.participantIDs ? threadInfo.participantIDs.length : 0,
            isAdmin: threadInfo.adminIDs ? threadInfo.adminIDs.some(admin => admin.id === botUserID) : false
        };
    } catch (error) {
        return {
            threadType: 'Unknown',
            memberCount: 0,
            isAdmin: false,
            error: error.message
        };
    }
}

module.exports = {
    name: "‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö",
    description: "‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏∞‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏´‡∏≤‡∏Å‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö",
    nashPrefix: true,
    version: "1.0.0",
    role: "admin",
    cooldowns: 3,
    aliases: ["badword", "‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö", "filter"],
    
    async execute(api, event, args) {
        const { threadID, messageID, senderID } = event;
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
        const config = loadBadwordConfig();
        
        if (args.length === 0) {
            const isEnabled = config[threadID]?.enabled || false;
            const customWords = config[threadID]?.customWords || [];
            
            let message = "üõ°Ô∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö\n";
            message += "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n";
            message += `‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${isEnabled ? 'üü¢ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : 'üî¥ ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}\n`;
            message += `‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©: ${customWords.length} ‡∏Ñ‡∏≥\n\n`;
            message += "üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:\n";
            message += "‚Ä¢ ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö ‡πÄ‡∏õ‡∏¥‡∏î - ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n";
            message += "‚Ä¢ ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö ‡∏õ‡∏¥‡∏î - ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n";
            message += "‚Ä¢ ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö ‡πÄ‡∏û‡∏¥‡πà‡∏° [‡∏Ñ‡∏≥] - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö\n";
            message += "‚Ä¢ ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö ‡∏•‡∏ö [‡∏Ñ‡∏≥] - ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö\n";
            message += "‚Ä¢ ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ - ‡∏î‡∏π‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n";
            message += "‚Ä¢ ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ö‡∏≠‡∏ó\n\n";
            message += "‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!";
            
            return api.sendMessage(message, threadID, messageID);
        }
        
        const action = args[0].toLowerCase();
        
        switch (action) {
            case '‡πÄ‡∏õ‡∏¥‡∏î':
            case 'on':
            case 'enable':
                if (!config[threadID]) config[threadID] = {};
                config[threadID].enabled = true;
                saveBadwordConfig(config);
                
                return api.sendMessage(
                    "üü¢ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß!\n\n" +
                    "‚ö†Ô∏è ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ",
                    threadID, messageID
                );
                
            case '‡∏õ‡∏¥‡∏î':
            case 'off':
            case 'disable':
                if (!config[threadID]) config[threadID] = {};
                config[threadID].enabled = false;
                saveBadwordConfig(config);
                
                return api.sendMessage(
                    "üî¥ ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß",
                    threadID, messageID
                );
                
            case '‡πÄ‡∏û‡∏¥‡πà‡∏°':
            case 'add':
                if (args.length < 2) {
                    return api.sendMessage(
                        "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö ‡πÄ‡∏û‡∏¥‡πà‡∏° ‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏î‡∏µ",
                        threadID, messageID
                    );
                }
                
                const wordToAdd = args.slice(1).join(' ');
                if (!config[threadID]) config[threadID] = { enabled: false, customWords: [] };
                if (!config[threadID].customWords) config[threadID].customWords = [];
                
                if (!config[threadID].customWords.includes(wordToAdd)) {
                    config[threadID].customWords.push(wordToAdd);
                    saveBadwordConfig(config);
                    
                    return api.sendMessage(
                        `‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥ "${wordToAdd}" ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß`,
                        threadID, messageID
                    );
                } else {
                    return api.sendMessage(
                        `‚ùå ‡∏Ñ‡∏≥ "${wordToAdd}" ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß`,
                        threadID, messageID
                    );
                }
                
            case '‡∏•‡∏ö':
            case 'remove':
            case 'delete':
                if (args.length < 2) {
                    return api.sendMessage(
                        "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö ‡∏•‡∏ö ‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏î‡∏µ",
                        threadID, messageID
                    );
                }
                
                const wordToRemove = args.slice(1).join(' ');
                if (!config[threadID] || !config[threadID].customWords) {
                    return api.sendMessage(
                        "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ",
                        threadID, messageID
                    );
                }
                
                const index = config[threadID].customWords.indexOf(wordToRemove);
                if (index !== -1) {
                    config[threadID].customWords.splice(index, 1);
                    saveBadwordConfig(config);
                    
                    return api.sendMessage(
                        `‚úÖ ‡∏•‡∏ö‡∏Ñ‡∏≥ "${wordToRemove}" ‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß`,
                        threadID, messageID
                    );
                } else {
                    return api.sendMessage(
                        `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥ "${wordToRemove}" ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`,
                        threadID, messageID
                    );
                }
                
            case '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£':
            case 'list':
                const customWords = config[threadID]?.customWords || [];
                
                let listMessage = "üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö\n";
                listMessage += "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n";
                listMessage += `üîß ‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô: ${DEFAULT_BADWORDS.length} ‡∏Ñ‡∏≥\n`;
                listMessage += `üîß ‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©: ${customWords.length} ‡∏Ñ‡∏≥\n\n`;
                
                if (customWords.length > 0) {
                    listMessage += "üìù ‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ:\n";
                    customWords.forEach((word, index) => {
                        listMessage += `${index + 1}. ${word}\n`;
                    });
                } else {
                    listMessage += "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ";
                }
                
                return api.sendMessage(listMessage, threadID, messageID);
                
            case '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞':
            case 'status':
                const permissions = await checkBotPermissions(api, threadID);
                
                let statusMessage = "üîç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö\n";
                statusMessage += "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n";
                statusMessage += `üì± ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏•‡∏∏‡πà‡∏°: ${permissions.threadType}\n`;
                statusMessage += `üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: ${permissions.memberCount} ‡∏Ñ‡∏ô\n`;
                statusMessage += `üõ°Ô∏è ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ö‡∏≠‡∏ó: ${permissions.isAdmin ? '‚úÖ ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô' : '‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô'}\n`;
                statusMessage += `üîß ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö: ${config[threadID]?.enabled ? 'üü¢ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : 'üî¥ ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}\n\n`;
                
                if (!permissions.isAdmin) {
                    statusMessage += "‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô!\n";
                    statusMessage += "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ï‡∏∞‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏î‡πâ";
                } else {
                    statusMessage += "‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô";
                }
                
                return api.sendMessage(statusMessage, threadID, messageID);
                
            default:
                return api.sendMessage(
                    "‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n‡πÉ‡∏ä‡πâ: ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö [‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î/‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö/‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£]",
                    threadID, messageID
                );
        }
    },
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    checkMessage: async (api, event) => {
        const { threadID, senderID, body } = event;
        
        // ‡∏Ç‡πâ‡∏≤‡∏°‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        if (!body) return;
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
        const config = loadBadwordConfig();
        const groupConfig = config[threadID];
        
        // ‡∏Ç‡πâ‡∏≤‡∏°‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ
        if (!groupConfig || !groupConfig.enabled) return;
        
        // ‡∏Ç‡πâ‡∏≤‡∏°‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÑ‡∏°‡πà‡πÇ‡∏î‡∏ô‡πÄ‡∏ï‡∏∞)
        const botConfig = require('../../config.json');
        if (senderID === botConfig.adminUID) return;
        
        // ‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö
        const customWords = groupConfig.customWords || [];
        if (containsBadword(body, customWords)) {
            try {
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ï‡∏∞
                const threadInfo = await api.getThreadInfo(threadID);
                if (threadInfo && threadInfo.participantIDs && threadInfo.participantIDs.includes(senderID)) {
                    // ‡πÄ‡∏ï‡∏∞‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                    await api.removeUserFromGroup(senderID, threadID);
                    console.log(`[BADWORD] Silently removed user ${senderID} from group ${threadID}`);
                } else {
                    console.log(`[BADWORD] User ${senderID} is not in group ${threadID}, skipping removal`);
                }
            } catch (error) {
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô error ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                if (error.payload && error.payload.includes('not a participant')) {
                    console.log(`[BADWORD] User ${senderID} is no longer in group ${threadID}`);
                } else {
                    console.log(`[BADWORD] Failed to remove user ${senderID} from group ${threadID}:`, error.errorSummary || error.message);
                }
            }
        }
    }
};

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô handleMessage ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å
// ‡∏ô‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
if (global.NashBoT && global.NashBoT.messageHandlers) {
    global.NashBoT.messageHandlers.push(module.exports.checkMessage);
} else {
    if (!global.NashBoT) global.NashBoT = {};
    if (!global.NashBoT.messageHandlers) global.NashBoT.messageHandlers = [];
    global.NashBoT.messageHandlers.push(module.exports.checkMessage);
}
