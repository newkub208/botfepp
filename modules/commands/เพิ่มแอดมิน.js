const fs = require('fs');
const path = require('path');

// --- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà ---
const SUPER_ADMIN_ID = '61555184860915'; // ‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
const ADMIN_FILE_PATH = path.join(__dirname, '../../admin_list.json'); // ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
const ADMIN_DETAILED_PATH = path.join(__dirname, '../../admin_detailed.json'); // ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô (‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤) ---
function loadAdmins() {
    try {
        if (fs.existsSync(ADMIN_FILE_PATH)) {
            const data = fs.readFileSync(ADMIN_FILE_PATH, 'utf8');
            return JSON.parse(data);
        }
    } catch (error) {
        console.error('Error loading admin list:', error);
    }
    return [];
}

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ---
function loadDetailedAdmins() {
    try {
        if (fs.existsSync(ADMIN_DETAILED_PATH)) {
            const data = fs.readFileSync(ADMIN_DETAILED_PATH, 'utf8');
            return JSON.parse(data);
        }
    } catch (error) {
        console.error('Error loading detailed admin data:', error);
    }
    return {
        superAdmin: SUPER_ADMIN_ID,
        temporaryAdmins: {},
        adminHistory: []
    };
}

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ---
function saveDetailedAdmins(data) {
    try {
        fs.writeFileSync(ADMIN_DETAILED_PATH, JSON.stringify(data, null, 2));
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤‡∏î‡πâ‡∏ß‡∏¢
        const activeAdmins = Object.keys(data.temporaryAdmins).filter(id => {
            const admin = data.temporaryAdmins[id];
            return admin.isActive && new Date(admin.expiresAt) > new Date();
        });
        fs.writeFileSync(ADMIN_FILE_PATH, JSON.stringify(activeAdmins, null, 2));
    } catch (error) {
        console.error('Error saving detailed admin data:', error);
    }
}

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô (‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤) ---
function saveAdmins(admins) {
    try {
        fs.writeFileSync(ADMIN_FILE_PATH, JSON.stringify(admins, null, 2));
    } catch (error) {
        console.error('Error saving admin list:', error);
    }
}

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ---
function cleanupExpiredAdmins() {
    const data = loadDetailedAdmins();
    const now = new Date();
    let hasChanges = false;

    for (const adminId in data.temporaryAdmins) {
        const admin = data.temporaryAdmins[adminId];
        if (new Date(admin.expiresAt) <= now || admin.kickCount >= 5) {
            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö
            data.adminHistory.push({
                adminId: adminId,
                addedAt: admin.addedAt,
                addedBy: admin.addedBy,
                removedAt: new Date().toISOString(),
                removedReason: admin.kickCount >= 5 ? '‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏£‡∏ö 5 ‡∏Ñ‡∏ô' : '‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏',
                kickCount: admin.kickCount,
                duration: admin.duration
            });
            
            delete data.temporaryAdmins[adminId];
            hasChanges = true;
        }
    }

    if (hasChanges) {
        saveDetailedAdmins(data);
    }
    
    return hasChanges;
}

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤ ---
function parseDuration(durationStr) {
    const match = durationStr.match(/(\d+)(‡∏ô‡∏≤‡∏ó‡∏µ|‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á|‡∏ß‡∏±‡∏ô|m|h|d)/i);
    if (!match) return null;
    
    const value = parseInt(match[1]);
    const unit = match[2].toLowerCase();
    
    const now = new Date();
    
    if (unit === '‡∏ô‡∏≤‡∏ó‡∏µ' || unit === 'm') {
        now.setMinutes(now.getMinutes() + value);
    } else if (unit === '‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á' || unit === 'h') {
        now.setHours(now.getHours() + value);
    } else if (unit === '‡∏ß‡∏±‡∏ô' || unit === 'd') {
        now.setDate(now.getDate() + value);
    }
    
    return now;
}

module.exports = {
    name: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô",
    description: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)",
    version: "2.0.0",
    aliases: ["addadmin", "setadmin", "add-admin", "admin-add", "makeadmin"],
    nashPrefix: false,
    cooldowns: 3,

    async execute(api, event, args, prefix) {
        const { threadID, messageID, senderID, type, messageReply } = event;

        // ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏Å‡πà‡∏≠‡∏ô
        cleanupExpiredAdmins();

        const detailedData = loadDetailedAdmins();

        // --- 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ---
        const isTemporaryAdmin = detailedData.temporaryAdmins[senderID] && 
                                detailedData.temporaryAdmins[senderID].isActive &&
                                new Date(detailedData.temporaryAdmins[senderID].expiresAt) > new Date();
        
        if (senderID !== SUPER_ADMIN_ID && !isTemporaryAdmin) {
            return api.sendMessage("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", threadID, messageID);
        }

        // --- 2. ‡∏´‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ ‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞ ---
        let targetID = "";
        let duration = "1‡∏ß‡∏±‡∏ô"; // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        let maxKicks = detailedData.defaultMaxKicks || 5; // ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
        
        if (type === "message_reply") {
            targetID = messageReply.senderID;
            if (args.length > 0) {
                // ‡πÅ‡∏¢‡∏Å‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡πÄ‡∏ß‡∏•‡∏≤ ‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞
                const params = args.join(' ').split(' ');
                duration = params[0] || "1‡∏ß‡∏±‡∏ô";
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                if (params[1] && /^\d+$/.test(params[1])) {
                    maxKicks = parseInt(params[1]);
                }
            }
        } else if (args.length > 0 && /^\d+$/.test(args[0])) {
            targetID = args[0];
            if (args.length > 1) {
                const params = args.slice(1);
                duration = params[0] || "1‡∏ß‡∏±‡∏ô";
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏° ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                if (params[1] && /^\d+$/.test(params[1])) {
                    maxKicks = parseInt(params[1]);
                }
            }
        } else {
            return api.sendMessage(
                `üìù ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:\n` +
                `‚Ä¢ ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå ${prefix}‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô [‡πÄ‡∏ß‡∏•‡∏≤] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡∏∞]\n` +
                `‚Ä¢ ‡∏û‡∏¥‡∏°‡∏û‡πå ${prefix}‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô [UID] [‡πÄ‡∏ß‡∏•‡∏≤] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡∏∞]\n\n` +
                `‚è∞ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤:\n` +
                `‚Ä¢ 30‡∏ô‡∏≤‡∏ó‡∏µ, 2‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á, 7‡∏ß‡∏±‡∏ô\n` +
                `‚Ä¢ 30m, 2h, 7d\n\n` +
                `üö´ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞:\n` +
                `‚Ä¢ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 1-100 (‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: 5)\n\n` +
                `üîç ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\n` +
                `${prefix}‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô 61574221880222 1‡∏ß‡∏±‡∏ô 10\n` +
                `${prefix}‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô 61574221880222 2‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á 3`,
                threadID,
                messageID
            );
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞
        if (maxKicks < 1 || maxKicks > 100) {
            return api.sendMessage(
                `‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1-100\n` +
                `üìä ‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏™‡πà: ${maxKicks}`,
                threadID,
                messageID
            );
        }

        // --- 3. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ ---
        const expiresAt = parseDuration(duration);
        if (!expiresAt) {
            return api.sendMessage(
                `‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n\n` +
                `‚úÖ ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:\n` +
                `‚Ä¢ ‡∏ô‡∏≤‡∏ó‡∏µ: 30‡∏ô‡∏≤‡∏ó‡∏µ ‡∏´‡∏£‡∏∑‡∏≠ 30m\n` +
                `‚Ä¢ ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á: 2‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ‡∏´‡∏£‡∏∑‡∏≠ 2h\n` +
                `‚Ä¢ ‡∏ß‡∏±‡∏ô: 7‡∏ß‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ 7d`,
                threadID,
                messageID
            );
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß)
        if (senderID !== SUPER_ADMIN_ID) {
            const maxTime = new Date();
            maxTime.setDate(maxTime.getDate() + 30); // ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 30 ‡∏ß‡∏±‡∏ô
            
            if (expiresAt > maxTime) {
                return api.sendMessage(
                    `‚ùå ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 30 ‡∏ß‡∏±‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô\n` +
                    `‚è∞ ‡∏Ñ‡∏∏‡∏ì‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤: ${duration}`,
                    threadID,
                    messageID
                );
            }
        }
        
        // --- 4. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ---
        try {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô Super Admin ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (targetID === SUPER_ADMIN_ID) {
                return api.sendMessage("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ", threadID, messageID);
            }

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (detailedData.temporaryAdmins[targetID] && 
                detailedData.temporaryAdmins[targetID].isActive &&
                new Date(detailedData.temporaryAdmins[targetID].expiresAt) > new Date()) {
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
                detailedData.temporaryAdmins[targetID].expiresAt = expiresAt.toISOString();
                detailedData.temporaryAdmins[targetID].duration = duration;
                detailedData.temporaryAdmins[targetID].maxKicks = maxKicks;
                detailedData.temporaryAdmins[targetID].lastUpdated = new Date().toISOString();
                detailedData.temporaryAdmins[targetID].updatedBy = senderID;
                
                saveDetailedAdmins(detailedData);
                
                const userInfo = await api.getUserInfo(targetID);
                const targetName = userInfo[targetID]?.name || `‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ UID: ${targetID}`;
                
                return api.sendMessage(
                    `‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô "${targetName}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n\n` +
                    `‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡∏°‡πà: ${duration}\n` +
                    `üìÖ ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏: ${expiresAt.toLocaleString('th-TH')}\n` +
                    `üö´ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞: ${detailedData.temporaryAdmins[targetID].kickCount}/${maxKicks} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á\n` +
                    `üìä ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${maxKicks - detailedData.temporaryAdmins[targetID].kickCount} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á`,
                    threadID,
                    messageID
                );
            }

            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà
            detailedData.temporaryAdmins[targetID] = {
                addedAt: new Date().toISOString(),
                addedBy: senderID,
                expiresAt: expiresAt.toISOString(),
                duration: duration,
                maxKicks: maxKicks,
                kickCount: 0,
                isActive: true,
                lastUpdated: new Date().toISOString()
            };

            saveDetailedAdmins(detailedData);

            // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
            const userInfo = await api.getUserInfo(targetID);
            const targetName = userInfo[targetID]?.name || `‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ UID: ${targetID}`;

            api.sendMessage(
                `‚úÖ ‡πÅ‡∏ï‡πà‡∏á‡∏ï‡∏±‡πâ‡∏á "${targetName}" ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n\n` +
                `‚è∞ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: ${duration}\n` +
                `üìÖ ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏: ${expiresAt.toLocaleString('th-TH')}\n` +
                `üö´ ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏ï‡∏∞: 0/${maxKicks} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á\n` +
                `üìä ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${maxKicks} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á\n\n` +
                `‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:\n` +
                `‚Ä¢ ‡πÄ‡∏ï‡∏∞‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ${maxKicks} ‡∏Ñ‡∏ô\n` +
                `‚Ä¢ ‡∏´‡∏≤‡∏Å‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏£‡∏ö ${maxKicks} ‡∏Ñ‡∏ô ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏ó‡∏±‡∏ô‡∏ó‡∏µ\n` +
                `‚Ä¢ ‡∏´‡∏≤‡∏Å‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥`,
                threadID,
                messageID
            );

        } catch (err) {
            console.error("Add admin command error:", err);
            api.sendMessage(
                `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô\n` +
                `üîß Error: ${err.message}`,
                threadID,
                messageID
            );
        }
    }
};
