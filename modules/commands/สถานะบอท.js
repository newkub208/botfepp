const fs = require('fs');
const path = require('path');

// --- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà ---
const SUPER_ADMIN_ID = '61555184860915'; // ‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
const ADMIN_FILE_PATH = path.join(__dirname, '../../admin_list.json'); // ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
const BOT_STATE_FILE_PATH = path.join(__dirname, '../../bot_state.json'); // ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏≠‡∏ó

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ---
function loadAdmins() {
    try {
        if (fs.existsSync(ADMIN_FILE_PATH)) {
            const data = fs.readFileSync(ADMIN_FILE_PATH, 'utf8');
            return JSON.parse(data);
        }
    } catch (error) {
        console.error('Error loading admin list:', error);
    }
    return [];
}

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏≠‡∏ó ---
function loadBotState() {
    try {
        if (fs.existsSync(BOT_STATE_FILE_PATH)) {
            const data = fs.readFileSync(BOT_STATE_FILE_PATH, 'utf8');
            return JSON.parse(data);
        }
    } catch (error) {
        console.error('Error loading bot state:', error);
    }
    return { 
        globalEnabled: true,
        threads: {}
    }; // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
}

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏≠‡∏ó‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° ---
function isBotEnabledInThread(threadID) {
    const botState = loadBotState();
    
    // ‡∏ñ‡πâ‡∏≤‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡πÉ‡∏´‡πâ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°
    if (!botState.globalEnabled) {
        return false;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏°
    if (botState.threads[threadID] && botState.threads[threadID].hasOwnProperty('enabled')) {
        return botState.threads[threadID].enabled;
    }
    
    // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    return true;
}

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ---
function hasPermission(senderID) {
    const admins = loadAdmins();
    return senderID === SUPER_ADMIN_ID || admins.includes(senderID);
}

module.exports = {
    name: "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏≠‡∏ó",
    description: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó",
    version: "1.0.0",
    aliases: ["status", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞"],
    nashPrefix: false,
    cooldowns: 2,

    async execute(api, event, args, prefix) {
        const { threadID, messageID, senderID } = event;

        try {
            const botState = loadBotState();
            const currentlyEnabled = isBotEnabledInThread(threadID);

            // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠
            let groupName = "‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ";
            try {
                const threadInfo = await api.getThreadInfo(threadID);
                groupName = threadInfo.threadName || "‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ";
            } catch (e) {
                // ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
            }

            let statusMessage = `ü§ñ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏≠‡∏ó\n\n`;
            statusMessage += `üìç ‡∏Å‡∏•‡∏∏‡πà‡∏°: ${groupName}\n`;
            statusMessage += `üåê ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: ${botState.globalEnabled ? "üü¢ ‡πÄ‡∏õ‡∏¥‡∏î" : "üî¥ ‡∏õ‡∏¥‡∏î"}\n`;
            statusMessage += `üéØ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ: ${currentlyEnabled ? "üü¢ ‡πÄ‡∏õ‡∏¥‡∏î" : "üî¥ ‡∏õ‡∏¥‡∏î"}\n\n`;

            if (currentlyEnabled) {
                statusMessage += `‚úÖ ‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ\n`;
                statusMessage += `‚Ä¢ ‡∏ï‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÑ‡∏î‡πâ\n`;
                statusMessage += `‚Ä¢ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ\n`;
                statusMessage += `‚Ä¢ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥\n\n`;
                statusMessage += `üîß ‡∏õ‡∏¥‡∏î‡∏ö‡∏≠‡∏ó: ${prefix}‡∏õ‡∏¥‡∏î`;
            } else {
                statusMessage += `‚ö†Ô∏è ‡∏ö‡∏≠‡∏ó‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ\n`;
                statusMessage += `‚Ä¢ ‡∏ï‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô\n`;
                statusMessage += `‚Ä¢ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô\n`;
                statusMessage += `‚Ä¢ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ\n\n`;
                statusMessage += `üîß ‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏≠‡∏ó: ${prefix}‡πÄ‡∏õ‡∏¥‡∏î`;
            }

            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
            if (hasPermission(senderID)) {
                statusMessage += `\n\nÔøΩ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô:`;
                
                // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ
                if (botState.threads[threadID]) {
                    const threadData = botState.threads[threadID];
                    if (threadData.hasOwnProperty('enabled')) {
                        statusMessage += `\nÔøΩ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ:`;
                        
                        if (threadData.enabled) {
                            if (threadData.enabledAt) {
                                statusMessage += `\nüü¢ ‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${new Date(threadData.enabledAt).toLocaleString('th-TH')}`;
                            }
                            if (threadData.enabledBy) {
                                statusMessage += `\nüë§ ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢: ${threadData.enabledBy}`;
                            }
                        } else {
                            if (threadData.disabledAt) {
                                statusMessage += `\nÔøΩ ‡∏õ‡∏¥‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${new Date(threadData.disabledAt).toLocaleString('th-TH')}`;
                            }
                            if (threadData.disabledBy) {
                                statusMessage += `\nüë§ ‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢: ${threadData.disabledBy}`;
                            }
                        }
                    }
                }

                // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
                const configuredThreads = Object.keys(botState.threads).length;
                statusMessage += `\nüìà ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤: ${configuredThreads} ‡∏Å‡∏•‡∏∏‡πà‡∏°`;
            }

            api.sendMessage(statusMessage, threadID, messageID);

        } catch (error) {
            console.error('Bot status error:', error);
            api.sendMessage(
                `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞\n` +
                `üîß Error: ${error.message}`,
                threadID,
                messageID
            );
        }
    }
};
