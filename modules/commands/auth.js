const authManager = require('../../utils/authManager');

module.exports = {
    name: "р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ",
    description: "р╕ер╕Зр╕Кр╕╖р╣Ир╕нр╣Ар╕Вр╣Йр╕▓р╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕гр╕░р╕Ър╕Ър╣Ар╕Юр╕╖р╣Ир╕нр╣Гр╕Кр╣Йр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Хр╣Ир╕▓р╕Зр╣Ж",
    nashPrefix: true,
    version: "1.0.0",
    role: "user", // р╕Чр╕╕р╕Бр╕Др╕Щр╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Гр╕Кр╣Йр╣Др╕Фр╣Й
    cooldowns: 5,
    aliases: ["login", "signin", "auth"],
    
    async execute(api, event, args) {
        const { threadID, messageID, senderID } = event;
        
        if (args.length === 0) {
            let message = "ЁЯФР р╕гр╕░р╕Ър╕Ър╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ\n";
            message += "тХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР\n\n";
            message += "ЁЯУЛ р╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╣Др╕Фр╣Й:\n";
            message += "тАв р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ р╕кр╕бр╕▒р╕Др╕г [р╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й] - р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Гр╕лр╕бр╣И\n";
            message += "тАв р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ р╣Ар╕Вр╣Йр╕▓ [р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ] - р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ\n";
            message += "тАв р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ р╕нр╕нр╕Б - р╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ъ\n";
            message += "тАв р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щ [р╕гр╕лр╕▒р╕кр╣Ар╕Фр╕┤р╕б] [р╕гр╕лр╕▒р╕кр╣Гр╕лр╕бр╣И] - р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ\n";
            message += "тАв р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ р╕кр╕Цр╕▓р╕Щр╕░ - р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ\n\n";
            message += "тЪая╕П р╕лр╕бр╕▓р╕вр╣Ар╕лр╕Хр╕╕: р╕Хр╣Йр╕нр╕Зр╕ер╕Зр╕Кр╕╖р╣Ир╕нр╣Ар╕Вр╣Йр╕▓р╣Гр╕Кр╣Йр╕Бр╣Ир╕нр╕Щр╕Ир╕╢р╕Зр╕Ир╕░р╣Гр╕Кр╣Йр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕нр╕╖р╣Ир╕Щр╣Ж р╣Др╕Фр╣Й!";
            
            return api.sendMessage(message, threadID, messageID);
        }
        
        const action = args[0].toLowerCase();
        
        switch (action) {
            case 'р╕кр╕бр╕▒р╕Др╕г':
            case 'register':
            case 'signup':
                if (args.length < 2) {
                    return api.sendMessage(
                        "тЭМ р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕░р╕Ър╕╕р╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й\nр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З: р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ р╕кр╕бр╕▒р╕Др╕г р╕Кр╕╖р╣Ир╕нр╕Вр╕нр╕Зр╕Йр╕▒р╕Щ",
                        threadID, messageID
                    );
                }
                
                const username = args.slice(1).join(' ');
                
                // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╣Ар╕Др╕вр╕кр╕бр╕▒р╕Др╕гр╣Бр╕ер╣Йр╕зр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
                const userExists = await authManager.userExists(senderID);
                if (userExists) {
                    return api.sendMessage(
                        "тЭМ р╕Др╕╕р╕Ур╣Ар╕Др╕вр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Бр╕ер╣Йр╕з\nр╕лр╕▓р╕Бр╕ер╕╖р╕бр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╕Ьр╕╣р╣Йр╕Фр╕╣р╣Бр╕ер╕гр╕░р╕Ър╕Ъ",
                        threadID, messageID
                    );
                }
                
                // р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б
                const registerResult = await authManager.registerUser(senderID, username);
                if (registerResult.success) {
                    return api.sendMessage(
                        `тЬЕ р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╣Бр╕ер╣Йр╕з!\n\n` +
                        `ЁЯСд р╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й: ${username}\n` +
                        `ЁЯФС р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ: ${registerResult.password}\n\n` +
                        `тЪая╕П р╕Бр╕гр╕╕р╕Ур╕▓р╣Ар╕Бр╣Зр╕Ър╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕зр╣Йр╣Гр╕лр╣Йр╕Фр╕╡!\n` +
                        `р╣Гр╕Кр╣Йр╕Др╕│р╕кр╕▒р╣Ир╕З "р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ р╣Ар╕Вр╣Йр╕▓ ${registerResult.password}" р╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ`,
                        threadID, messageID
                    );
                } else {
                    return api.sendMessage(
                        `тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Др╕Фр╣Й: ${registerResult.error}`,
                        threadID, messageID
                    );
                }
                
            case 'р╣Ар╕Вр╣Йр╕▓':
            case 'login':
            case 'signin':
                if (args.length < 2) {
                    return api.sendMessage(
                        "тЭМ р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕░р╕Ър╕╕р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ\nр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З: р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ р╣Ар╕Вр╣Йр╕▓ р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕Вр╕нр╕Зр╕Др╕╕р╕У",
                        threadID, messageID
                    );
                }
                
                const password = args[1];
                
                // р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ
                const loginResult = await authManager.login(senderID, password);
                if (loginResult.success) {
                    const expiresAt = new Date(loginResult.expiresAt);
                    return api.sendMessage(
                        `тЬЕ р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╣Бр╕ер╣Йр╕з!\n\n` +
                        `ЁЯСд р╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й: ${loginResult.userData.username}\n` +
                        `тП░ Session р╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕: ${expiresAt.toLocaleString('th-TH')}\n\n` +
                        `ЁЯОЙ р╕Хр╕нр╕Щр╕Щр╕╡р╣Йр╕Др╕╕р╕Ур╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Гр╕Кр╣Йр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Хр╣Ир╕▓р╕Зр╣Ж р╣Др╕Фр╣Йр╣Бр╕ер╣Йр╕з!`,
                        threadID, messageID
                    );
                } else {
                    return api.sendMessage(
                        `тЭМ р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И: ${loginResult.error}`,
                        threadID, messageID
                    );
                }
                
            case 'р╕нр╕нр╕Б':
            case 'logout':
            case 'signout':
                // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ session р╕Бр╣Ир╕нр╕Щ
                const sessionCheck = await authManager.validateSession(senderID);
                if (!sessionCheck.valid) {
                    return api.sendMessage(
                        "тЭМ р╕Др╕╕р╕Ур╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Др╕Фр╣Йр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ",
                        threadID, messageID
                    );
                }
                
                // р╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ъ
                const logoutResult = await authManager.logout(senderID);
                if (logoutResult.success) {
                    return api.sendMessage(
                        "тЬЕ р╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ър╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╣Бр╕ер╣Йр╕з!\n\nр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╣Гр╕лр╕бр╣Ир╣Ар╕бр╕╖р╣Ир╕нр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Хр╣Ир╕▓р╕Зр╣Ж",
                        threadID, messageID
                    );
                } else {
                    return api.sendMessage(
                        `тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ър╣Др╕Фр╣Й: ${logoutResult.error}`,
                        threadID, messageID
                    );
                }
                
            case 'р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щ':
            case 'change':
            case 'changepass':
                if (args.length < 3) {
                    return api.sendMessage(
                        "тЭМ р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕░р╕Ър╕╕р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Ар╕Фр╕┤р╕бр╣Бр╕ер╕░р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Гр╕лр╕бр╣И\nр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З: р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щ р╕гр╕лр╕▒р╕кр╣Ар╕Фр╕┤р╕б р╕гр╕лр╕▒р╕кр╣Гр╕лр╕бр╣И",
                        threadID, messageID
                    );
                }
                
                const oldPassword = args[1];
                const newPassword = args[2];
                
                // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ session р╕Бр╣Ир╕нр╕Щ
                const sessionValid = await authManager.validateSession(senderID);
                if (!sessionValid.valid) {
                    return api.sendMessage(
                        "тЭМ р╕Бр╕гр╕╕р╕Ур╕▓р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╕Бр╣Ир╕нр╕Щр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ",
                        threadID, messageID
                    );
                }
                
                // р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
                const changeResult = await authManager.changePassword(senderID, oldPassword, newPassword);
                if (changeResult.success) {
                    return api.sendMessage(
                        `тЬЕ р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╣Бр╕ер╣Йр╕з!\n\n` +
                        `ЁЯФС р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Гр╕лр╕бр╣И: ${newPassword}\n` +
                        `тЪая╕П р╕Бр╕гр╕╕р╕Ур╕▓р╣Ар╕Бр╣Зр╕Ър╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Гр╕лр╕бр╣Ир╣Др╕зр╣Йр╣Гр╕лр╣Йр╕Фр╕╡!`,
                        threadID, messageID
                    );
                } else {
                    return api.sendMessage(
                        `тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕Фр╣Й: ${changeResult.error}`,
                        threadID, messageID
                    );
                }
                
            case 'р╕кр╕Цр╕▓р╕Щр╕░':
            case 'status':
            case 'info':
                // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ session
                const currentSession = await authManager.validateSession(senderID);
                
                if (!currentSession.valid) {
                    return api.sendMessage(
                        "ЁЯФ┤ р╕кр╕Цр╕▓р╕Щр╕░: р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Др╕Фр╣Йр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ\n\n" +
                        "р╕Бр╕гр╕╕р╕Ур╕▓р╣Гр╕Кр╣Йр╕Др╕│р╕кр╕▒р╣Ир╕З 'р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ р╣Ар╕Вр╣Йр╕▓ [р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ]' р╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ",
                        threadID, messageID
                    );
                }
                
                const sessionData = currentSession.sessionData;
                const loginTime = new Date(sessionData.loginTime);
                const expiresAt = new Date(sessionData.expiresAt);
                const timeLeft = Math.ceil((expiresAt - new Date()) / (1000 * 60 * 60)); // р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕Зр╕Чр╕╡р╣Ир╣Ар╕лр╕ер╕╖р╕н
                
                return api.sendMessage(
                    `ЁЯЯв р╕кр╕Цр╕▓р╕Щр╕░: р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╣Бр╕ер╣Йр╕з\n\n` +
                    `ЁЯСд р╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й: ${senderID}\n` +
                    `тП░ р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╣Ар╕бр╕╖р╣Ир╕н: ${loginTime.toLocaleString('th-TH')}\n` +
                    `тП│ Session р╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕р╣Гр╕Щ: ${timeLeft} р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З\n\n` +
                    `тЬЕ р╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Гр╕Кр╣Йр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Хр╣Ир╕▓р╕Зр╣Ж р╣Др╕Фр╣Й`,
                    threadID, messageID
                );
                
            default:
                return api.sendMessage(
                    "тЭМ р╕Др╕│р╕кр╕▒р╣Ир╕Зр╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З\nр╣Гр╕Кр╣Й: р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ [р╕кр╕бр╕▒р╕Др╕г/р╣Ар╕Вр╣Йр╕▓/р╕нр╕нр╕Б/р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щ/р╕кр╕Цр╕▓р╕Щр╕░]",
                    threadID, messageID
                );
        }
    }
};
