/**
 * @name autoReplyTagManager
 * @description ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏ó‡πá‡∏Å UID (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)
 * @version 1.0.0
 * @author Auto Generated by ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 */

const fs = require('fs');
const path = require('path');

// ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Auto Reply Tag
const CONFIG_FILE = path.join(__dirname, 'autoReplyTagConfig.json');

// ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
function loadConfig() {
    try {
        if (fs.existsSync(CONFIG_FILE)) {
            return JSON.parse(fs.readFileSync(CONFIG_FILE, 'utf8'));
        }
    } catch (error) {
        console.error('[AutoReplyTag Config] Error loading config:', error);
    }
    return {
        enabled: true,
        targetUID: "61555184860915",
        replyMessage: "‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á",
        threads: {} // thread-specific settings
    };
}

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
function saveConfig(config) {
    try {
        fs.writeFileSync(CONFIG_FILE, JSON.stringify(config, null, 2));
        return true;
    } catch (error) {
        console.error('[AutoReplyTag Config] Error saving config:', error);
        return false;
    }
}

module.exports = {
    name: "autoReplyTagManager",
    description: "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏ó‡πá‡∏Å UID (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)",
    version: "1.0.0",
    aliases: ["artm", "autoreply"],
    nashPrefix: false,
    cooldowns: 5,

    async execute(api, event, args, prefix) {
        const { threadID, messageID, senderID } = event;
        const action = args[0]?.toLowerCase();
        const config = loadConfig();

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
        const adminUID = global.config?.adminUID || "61555184860915";
        if (senderID !== adminUID) {
            return api.sendMessage("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", threadID, messageID);
        }

        try {
            switch (action) {
                case 'on':
                case '‡πÄ‡∏õ‡∏¥‡∏î':
                    config.enabled = true;
                    if (saveConfig(config)) {
                        api.sendMessage("‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö Auto Reply Tag ‡πÅ‡∏•‡πâ‡∏ß", threadID, messageID);
                    } else {
                        api.sendMessage("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö", threadID, messageID);
                    }
                    break;

                case 'off':
                case '‡∏õ‡∏¥‡∏î':
                    config.enabled = false;
                    if (saveConfig(config)) {
                        api.sendMessage("‚úÖ ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö Auto Reply Tag ‡πÅ‡∏•‡πâ‡∏ß", threadID, messageID);
                    } else {
                        api.sendMessage("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö", threadID, messageID);
                    }
                    break;

                case 'setmessage':
                case '‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°':
                    const newMessage = args.slice(1).join(' ');
                    if (!newMessage) {
                        api.sendMessage("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: autoReplyTagManager ‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á‡∏ô‡∏∞", threadID, messageID);
                        break;
                    }
                    config.replyMessage = newMessage;
                    if (saveConfig(config)) {
                        api.sendMessage(`‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÉ‡∏´‡∏°‡πà: "${newMessage}"`, threadID, messageID);
                    } else {
                        api.sendMessage("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", threadID, messageID);
                    }
                    break;

                case 'setuid':
                case '‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏≠‡∏î‡∏µ':
                    const newUID = args[1];
                    if (!newUID) {
                        api.sendMessage("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ UID ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: autoReplyTagManager ‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏≠‡∏î‡∏µ 61555184860915", threadID, messageID);
                        break;
                    }
                    config.targetUID = newUID;
                    if (saveConfig(config)) {
                        api.sendMessage(`‚úÖ ‡∏ï‡∏±‡πâ‡∏á UID ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà: ${newUID}`, threadID, messageID);
                    } else {
                        api.sendMessage("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á UID", threadID, messageID);
                    }
                    break;

                case 'status':
                case '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞':
                case undefined:
                    const adminUID = global.config?.adminUID || "61555184860915";
                    const statusMessage = `ü§ñ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö Auto Reply Tag\n` +
                                        `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n` +
                                        `üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${config.enabled ? 'üü¢ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : 'üî¥ ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}\n` +
                                        `üéØ UID ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢: ${config.targetUID}\n` +
                                        `üí¨ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö: "${config.replyMessage}"\n` +
                                        `üëë ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô: ${adminUID}\n\n` +
                                        `üìã ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô):\n` +
                                        `‚Ä¢ ${prefix}autoReplyTagManager ‡πÄ‡∏õ‡∏¥‡∏î - ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö\n` +
                                        `‚Ä¢ ${prefix}autoReplyTagManager ‡∏õ‡∏¥‡∏î - ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö\n` +
                                        `‚Ä¢ ${prefix}autoReplyTagManager ‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° <‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°> - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö\n` +
                                        `‚Ä¢ ${prefix}autoReplyTagManager ‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏≠‡∏î‡∏µ <UID> - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô UID ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢\n` +
                                        `‚Ä¢ ${prefix}autoReplyTagManager ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ - ‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô`;
                    api.sendMessage(statusMessage, threadID, messageID);
                    break;

                default:
                    api.sendMessage(`‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n‡πÉ‡∏ä‡πâ: ${prefix}autoReplyTagManager ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ`, threadID, messageID);
                    break;
            }
        } catch (error) {
            console.error('[AutoReplyTagManager Error]:', error);
            api.sendMessage(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`, threadID, messageID);
        }
    }
};
